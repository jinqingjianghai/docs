{
  "openapi": "3.1.0",
  "info": {
    "title": "Genbo API",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Chat"
    },
    {
      "name": "Image"
    },
    {
      "name": "Video"
    },
    {
      "name": "Upload"
    },
    {
      "name": "Audio"
    }
  ],
  "paths": {
    "/v1/chat/completions": {
      "post": {
        "summary": "Chat Conversation (OpenAI Format)",
        "deprecated": false,
        "description": "Given a prompt, the model will return one or more predicted completions, and can also return the probability of alternative tokens at each position.\nCreates a completion for the provided prompt and parameters.",
        "tags": [
          "Chat"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Corresponding Model Name. ",
                    "enum": [
                      "DeepSeek-R1-0528"
                    ]
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "The role of the messages author. Choice between: system, user, or assistant.",
                          "enum": [
                            "user",
                            "assistant",
                            "system"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "description": "The contents of the message."
                        }
                      }
                    },
                    "description": "The list of messages in the conversation so far."
                  },
                  "temperature": {
                    "type": "integer",
                    "description": "Sampling temperature to use, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both.",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "n": {
                    "type": "integer",
                    "description": "Defaults to 1. How many chat completion choices to generate for each input message.",
                    "default": 1
                  },
                  "top_p": {
                    "type": "integer",
                    "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both.",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "Defaults to false. If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as server-sent events as they become available, with data: [DONE] message terminating the stream.",
                    "default": false
                  },
                  "stop": {
                    "type": "string",
                    "description": "Defaults to null. Up to 4 sequences where the API will stop generating further tokens."
                  },
                  "max_tokens": {
                    "type": "integer",
                    "description": "Defaults to inf. The maximum number of tokens to generate in the chat completion. The total length of input tokens and generated tokens is limited by the model's context length.",
                    "minimum": 1,
                    "maximum": 16384
                  },
                  "presence_penalty": {
                    "type": "number",
                    "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."
                  },
                  "frequency_penalty": {
                    "type": "number",
                    "description": "Defaults to 0. Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                    "default": 0,
                    "minimum": -2,
                    "maximum": 2
                  },
                  "logit_bias": {
                    "type": "null",
                    "description": "Modify the likelihood of specified tokens appearing in the completion. Accepts a JSON object that maps tokens (specified by token ID as given by the tokenizer) to an associated bias value between -100 and 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood; values like -100 or 100 should result in a ban or exclusive selection of the relevant token."
                  },
                  "user": {
                    "type": "string",
                    "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse."
                  },
                  "response_format": {
                    "type": "object",
                    "properties": {},
                    "description": "An object specifying the format that the model must output. Use { \"type\": \"json_object\" } to enable JSON mode, which ensures the model's message is valid JSON. Important: When using JSON mode, you must also instruct the model to produce JSON via system or user message. If you do not, the model may generate an endless stream of whitespace until generation hits the token limit, resulting in increased latency and a 'stuck' request. Also note that if finish_reason=\"length\", the message content may be cut off, indicating generation exceeded max_tokens or the conversation exceeded the maximum context length."
                  },
                  "seed": {
                    "type": "integer",
                    "description": "This feature is experimental. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor for backend changes."
                  },
                  "tools": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A set of tools the model can call. Currently, only functions are supported as tools. Use this to provide a list of functions the model can generate JSON inputs for."
                  },
                  "tool_choice": {
                    "type": "object",
                    "properties": {},
                    "description": "Controls which function (if any) the model calls. none means the model will not call a function and will instead generate a message. auto means the model can decide to generate a message or call a function. Use {\"type\": \"function\", \"function\": {\"name\": \"my_function\"}} to force the model to call that function. If no functions exist, defaults to none. If functions exist, defaults to auto. Show possible types."
                  }
                },
                "required": [
                  "model",
                  "messages"
                ]
              },
              "example": {
                "model": "DeepSeek-R1-0528",
                "messages": [
                  {
                    "role": "user",
                    "content": "What opportunities and challenges will the Chinese large model industry face in 2025?"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string"
                    },
                    "created": {
                      "type": "integer"
                    },
                    "choices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "integer"
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "role": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "role",
                              "content"
                            ]
                          },
                          "finish_reason": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "integer"
                        },
                        "completion_tokens": {
                          "type": "integer"
                        },
                        "total_tokens": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "completion_tokens",
                        "total_tokens"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "created",
                    "choices",
                    "usage"
                  ]
                },
                "example": {
                  "id": "<string>",
                  "object": "chat.completion",
                  "created": 1752470588,
                  "model": "DeepSeek-R1-0528",
                  "choices": [
                    {
                      "index": 0,
                      "message": {
                        "role": "assistant",
                        "reasoning_content": null,
                        "content": "<string>",
                        "tool_calls": []
                      },
                      "logprobs": null,
                      "finish_reason": "stop",
                      "stop_reason": null
                    }
                  ],
                  "usage": {
                    "prompt_tokens": 47,
                    "total_tokens": 592,
                    "completion_tokens": 545,
                    "prompt_tokens_details": null
                  },
                  "prompt_logprobs": null
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/images/generations": {
      "post": {
        "summary": "Submit Image Task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Image"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/image"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "task_id"
                  ]
                },
                "example": {
                  "task_id": "<string>"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "summary": "Get Image Generation Result (List)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Image"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "Page Number",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "task_id": {
                        "type": "string"
                      },
                      "task_status": {
                        "type": "string",
                        "title": "Task Status"
                      },
                      "fail_reason": {
                        "type": "string",
                        "title": "Failure Reason"
                      },
                      "task_result": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "url": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "title": "Generated Image URL"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "created_at": {
                        "type": "integer",
                        "title": "Task Creation Time (s)"
                      },
                      "updated_at": {
                        "type": "integer",
                        "title": "Task Update Time (s)"
                      },
                      "input": {
                        "$ref": "#/components/schemas/image"
                      }
                    },
                    "required": [
                      "task_id",
                      "task_status",
                      "fail_reason",
                      "task_result",
                      "created_at",
                      "updated_at",
                      "input"
                    ]
                  }
                },
                "example": [
                  {
                    "task_id": "155a9c76-e0de-4393-a1a8-976621bbee31",
                    "task_status": "SUCCESS",
                    "fail_reason": "",
                    "task_result": {
                      "url": [
                        "https://online.genbo.ai/genbo/5ee3894a-eb3e-42e4-8751-eee894c34093.png"
                      ]
                    },
                    "created_at": 1755582493,
                    "updated_at": 1755582538,
                    "input": {
                      "cfg": 3,
                      "seed": 32116006431307452,
                      "model": "qwen-image",
                      "steps": 20,
                      "prompt": "cute anime girl with massive fennec ears and a big fluffy fox tail with long wavy blonde hair between eyes and large blue eyes blonde colored eyelashes chubby wearing oversized clothes summer uniform long blue maxi skirt muddy clothes happy sitting on the side of the road in a run down dark gritty cyberpunk city with neon and a crumbling skyscraper in the rain at night while dipping her feet in a river of water she is holding a sign that says 'ComfyUI is the best' written in cursive",
                      "image_size": "576x1024",
                      "num_images": 1,
                      "negative_prompt": "ng_deepnegative_v1_75t,(badhandv4:1.2),EasyNegative,(worst quality:2),"
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/images/generations/{id}": {
      "get": {
        "summary": "Get Image Generation Result (Single)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Image"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "example": "dad377bc-2e5b-4804-8fe2-62467e798301",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "task_id": {
                          "type": "string"
                        },
                        "task_status": {
                          "type": "string",
                          "title": "Task Status"
                        },
                        "fail_reason": {
                          "type": "string",
                          "title": "Failure Reason"
                        },
                        "task_result": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "url": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "title": "Generated Image URL"
                            }
                          },
                          "required": [
                            "url"
                          ]
                        },
                        "created_at": {
                          "type": "integer",
                          "title": "Task Creation Time (s)"
                        },
                        "updated_at": {
                          "type": "integer",
                          "title": "Task Update Time (s)"
                        },
                        "input": {
                          "$ref": "#/components/schemas/image"
                        }
                      },
                      "required": [
                        "task_id",
                        "task_status",
                        "fail_reason",
                        "task_result",
                        "created_at",
                        "updated_at",
                        "input"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "success",
                    "message"
                  ]
                },
                "example": {
                  "data": {
                    "task_id": "6e260716-a0f5-450a-96d8-11a0ef1da495",
                    "task_status": "SUCCESS",
                    "fail_reason": "",
                    "task_result": {
                      "url": [
                        "https://online.genbo.ai/genbo/c80209cd-87ef-4756-ac7c-f368dc993592.png"
                      ]
                    },
                    "created_at": 1755572353,
                    "updated_at": 1755572402,
                    "input": {
                      "cfg": 1,
                      "seed": 3486883881156089,
                      "model": "FLUX.1 [dev]",
                      "steps": 20,
                      "prompt": "A rubber duck flows in the golden river",
                      "image_size": "1024x576",
                      "num_images": 1,
                      "negative_prompt": "(worst quality:2),embedding:EasyNegative_v1,embedding:ng_deepnegative_v1_75t,embedding:negative_hand_v1,nsfw"
                    }
                  },
                  "message": "",
                  "success": true
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/video/generations": {
      "post": {
        "summary": "Submit Video Task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Video"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/video"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "task_id"
                  ]
                },
                "example": {
                  "task_id": "<string>"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/videos/generations": {
      "get": {
        "summary": "Get Video Generation Result (List)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "Page Number",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "task_id": {
                        "type": "string"
                      },
                      "task_status": {
                        "type": "string",
                        "title": "Task Status"
                      },
                      "fail_reason": {
                        "type": "string",
                        "title": "Failure Reason"
                      },
                      "task_result": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "title": "Video URL"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "created_at": {
                        "type": "integer",
                        "title": "Task Creation Time (s)"
                      },
                      "updated_at": {
                        "type": "integer",
                        "title": "Task Update Time (s)"
                      },
                      "input": {
                        "$ref": "#/components/schemas/video"
                      }
                    },
                    "required": [
                      "task_id",
                      "task_status",
                      "fail_reason",
                      "task_result",
                      "created_at",
                      "updated_at",
                      "input"
                    ]
                  }
                },
                "example": [
                  {
                    "task_id": "340f3c8f-e8e0-488b-8e8b-d1e209edd745",
                    "task_status": "SUCCESS",
                    "fail_reason": "",
                    "task_result": {
                      "url": "https://online.genbo.ai/genbo/47712e2e-724e-489e-a933-98cb1f5817a1.mp4"
                    },
                    "created_at": 1754119419,
                    "updated_at": 1754119520,
                    "input": {
                      "model": "Wan2_1-T2V-14B",
                      "prompt": "a robot is running through a futuristic cyberpunk city with neon signs and darkness with bright HDR lights",
                      "negative_prompt": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                      "seed": 1,
                      "aspect_ratio": "1280x720",
                      "steps": 5,
                      "cfg": 1
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/videos/generations/{id}": {
      "get": {
        "summary": "Get Video Generation Result (Single)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "example": "2189c7a5-18f2-443c-a6eb-5c8be012e15b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "task_id": {
                          "type": "string"
                        },
                        "task_status": {
                          "type": "string",
                          "title": "Task Status"
                        },
                        "fail_reason": {
                          "type": "string",
                          "title": "Failure Reason"
                        },
                        "task_result": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": ""
                            }
                          },
                          "required": [
                            "url"
                          ]
                        },
                        "created_at": {
                          "type": "integer",
                          "title": "Task Creation Time (s)"
                        },
                        "updated_at": {
                          "type": "integer",
                          "title": "Task Update Time (s)"
                        },
                        "input": {
                          "$ref": "#/components/schemas/video"
                        }
                      },
                      "required": [
                        "task_id",
                        "task_status",
                        "fail_reason",
                        "task_result",
                        "created_at",
                        "updated_at",
                        "input"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "success",
                    "message"
                  ]
                },
                "example": {
                  "data": {
                    "task_id": "98b9e109-56d6-498c-8c98-a936f7c998c6",
                    "task_status": "SUCCESS",
                    "fail_reason": "",
                    "task_result": {
                      "url": "https://online.genbo.ai/genbo/c9937897-937d-43b8-862b-60fc6ea06c57.mp4"
                    },
                    "created_at": 1754119392,
                    "updated_at": 1754119704,
                    "input": {
                      "model": "Wan2_1-T2V-14B",
                      "prompt": "a robot is running through a futuristic cyberpunk city with neon signs and darkness with bright HDR lights",
                      "negative_prompt": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                      "seed": 1,
                      "aspect_ratio": "1280x720",
                      "steps": 5,
                      "cfg": 1
                    }
                  },
                  "message": "",
                  "success": true
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/upload/files": {
      "post": {
        "summary": "Upload Files",
        "deprecated": false,
        "description": "",
        "tags": [
          "Upload"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string",
                    "description": "support JPG, PNG, MP4, AVI, MOV, MKV, GIF, MP3, WAV, OGG and AAC",
                    "example": ""
                  }
                },
                "required": [
                  "file"
                ]
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "full_url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "full_url"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "data",
                    "message",
                    "success"
                  ]
                },
                "example": {
                  "data": {
                    "full_url": "https://genbo-1253229617.cos.na-ashburn.myqcloud.com/2ad7bfb0-cd9a-444b-a10d-d61014f0b418.png"
                  },
                  "message": "",
                  "success": true
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/audio/generations": {
      "post": {
        "summary": "Submit Audio Task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Audio"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/audio"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "task_id"
                  ]
                },
                "example": {
                  "task_id": "<string>"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "summary": "Get Audio Generation Result (List)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Audio"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": true,
            "example": 10,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "Page Number",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "task_id": {
                        "type": "string"
                      },
                      "task_status": {
                        "type": "string",
                        "title": "Task Status"
                      },
                      "fail_reason": {
                        "type": "string",
                        "title": "Failure Reason"
                      },
                      "task_result": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "title": ""
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "created_at": {
                        "type": "integer",
                        "title": "Task Creation Time (s)"
                      },
                      "updated_at": {
                        "type": "integer",
                        "title": "Task Update Time (s)"
                      },
                      "input": {
                        "$ref": "#/components/schemas/audio"
                      }
                    },
                    "required": [
                      "task_id",
                      "task_status",
                      "fail_reason",
                      "task_result",
                      "created_at",
                      "updated_at",
                      "input"
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/v1/audio/generations/{id}": {
      "get": {
        "summary": "Get Audio Generation Result (Single)",
        "deprecated": false,
        "description": "",
        "tags": [
          "Audio"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "task_id": {
                          "type": "string"
                        },
                        "task_status": {
                          "type": "string",
                          "title": "Task Status"
                        },
                        "fail_reason": {
                          "type": "string",
                          "title": "Failure Reason"
                        },
                        "task_result": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "title": ""
                            }
                          },
                          "required": [
                            "url"
                          ]
                        },
                        "created_at": {
                          "type": "integer",
                          "title": "Task Creation Time (s)"
                        },
                        "updated_at": {
                          "type": "integer",
                          "title": "Task Update Time (s)"
                        },
                        "input": {
                          "$ref": "#/components/schemas/audio"
                        }
                      },
                      "required": [
                        "task_id",
                        "task_status",
                        "fail_reason",
                        "task_result",
                        "created_at",
                        "updated_at",
                        "input"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "success",
                    "message"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "webhooks": {},
  "components": {
    "schemas": {
      "image": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "FLUX.1 [dev]"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "A rubber duck flows in the golden river",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "The negative prompt to use. Use it to address details that you don't want in the image.",
                "example": "(worst quality:2),embedding:EasyNegative_v1,embedding:ng_deepnegative_v1_75t,embedding:negative_hand_v1,nsfw",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of Stable Diffusion will output the same image every time.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "576x1024",
                "enum": [
                  "512x512",
                  "1024x1024",
                  "768x1024",
                  "576x1024",
                  "1024x768",
                  "1024x576"
                ]
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 1,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale (CFG)",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 1,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt"
            ],
            "title": "FLUX.1 [dev]",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Hunyuan-DiT v1.2"
                ],
                "example": "Hunyuan-DiT v1.2"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "Extreme close-up of a single tiger eye, direct frontal view. Detailed iris and pupil. Sharp focus on eye texture and color. Natural lighting to capture authentic eye shine and depth. The word \"FLUX\" is painted over it in big, white brush strokes with visible texture.",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "The negative prompt to use. Use it to address details that you don't want in the image.",
                "example": "(worst quality:2),embedding:EasyNegative_v1,embedding:ng_deepnegative_v1_75t,embedding:negative_hand_v1,nsfw",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 1,
                "minimum": 0,
                "maximum": 10000000000000000
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "576x1024",
                "enum": [
                  "512x512",
                  "1024x1024",
                  "768x1024",
                  "576x1024",
                  "1024x768",
                  "1024x576"
                ]
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 1,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale (CFG)",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 4.5,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt"
            ],
            "title": "Hunyuan-DiT v1.2",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "flux.1-kontext-dev"
                ]
              },
              "image_url": {
                "type": "string",
                "format": "uri",
                "title": "Image Url",
                "description": "URL of image to use for img2img",
                "example": "https://online.genbo.ai/img2video/412e68c5-1cad-4c0c-8a97-f14c40c412f2.jpg",
                "pattern": "https?://.*\\.(jpeg|png|jpg)"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "小鸟的嘴上加一个树枝",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "resolution_mode": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "custom",
                "enum": [
                  "custom",
                  "1:1 square 1024x1024",
                  "3:4 portrait 896x1152",
                  "9:16 portrait 768x1344",
                  "1024x768",
                  "16:9 landscape 1344x768"
                ]
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 6,
                "minimum": 1,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale (CFG)",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 1,
                "minimum": 0,
                "maximum": 30,
                "multipleOf": 0.1
              }
            },
            "title": "flux.1-kontext-dev",
            "required": [
              "model",
              "prompt",
              "image_url"
            ],
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "qwen-image"
                ],
                "example": "qwen-image"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "cute anime girl with massive fennec ears and a big fluffy fox tail with long wavy blonde hair between eyes and large blue eyes blonde colored eyelashes chubby wearing oversized clothes summer uniform long blue maxi skirt muddy clothes happy sitting on the side of the road in a run down dark gritty cyberpunk city with neon and a crumbling skyscraper in the rain at night while dipping her feet in a river of water she is holding a sign that says 'ComfyUI is the best' written in cursive",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "The negative prompt for the generation",
                "example": "ng_deepnegative_v1_75t,(badhandv4:1.2),EasyNegative,(worst quality:2),",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 32116006431307452,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "576x1024",
                "enum": [
                  "512x512",
                  "1024x1024",
                  "768x1024",
                  "576x1024",
                  "1024x768",
                  "1024x576"
                ]
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 2,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you. Default value: 3",
                "example": 3,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt"
            ],
            "title": "qwen-image",
            "description": ""
          },
          {
            "type": "object",
            "title": "flux.1-krea-dev-I2I",
            "properties": {
              "model": {
                "type": "string",
                "example": "flux.1-krea-dev-I2I",
                "enum": [
                  "flux.1-krea-dev-I2I"
                ]
              },
              "image_url": {
                "type": "string",
                "format": "uri",
                "title": "Image Url",
                "description": "URL of image to use for img2img",
                "example": "https://img2.baidu.com/it/u=3430653577,2582301365&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=750",
                "pattern": "https?://.*\\.(jpeg|png|jpg)"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "cute anime girl with massive fennec ears and a big fluffy fox tail with long wavy blonde hair between eyes and large blue eyes blonde colored eyelashes chubby wearing oversized clothes summer uniform long blue maxi skirt muddy clothes happy sitting on the side of the road in a run down dark gritty cyberpunk city with neon and a crumbling skyscraper in the rain at night while dipping her feet in a river of water she is holding a sign that says 'ComfyUI is the best' written in cursive",
                "maxLength": 800
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "custom",
                "enum": [
                  "custom",
                  "1:1 square 1024x1024",
                  "3:4 portrait 896x1152",
                  "9:16 portrait 768x1344",
                  "4:3 portrait 1152x896",
                  "16:9 landscape 1344x768"
                ]
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 8,
                "minimum": 2,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 1,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "image_url",
              "prompt"
            ],
            "description": ""
          },
          {
            "type": "object",
            "title": "flux.1-krea-dev-T2I",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "flux.1-krea-dev-T2I"
                ],
                "example": "flux.1-krea-dev-T2I"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "GHIBSKY style, a cyberpunk cat holding a neon sign that says \"SVDQuant is lite and fast!\"",
                "maxLength": 800
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "576x1024",
                "enum": [
                  "512x512",
                  "1024x1024",
                  "768x1024",
                  "576x1024",
                  "1024x768",
                  "1024x576"
                ]
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 2,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 1,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt"
            ],
            "description": ""
          },
          {
            "type": "object",
            "title": "qwen-image-edit",
            "properties": {
              "model": {
                "type": "string",
                "example": "qwen-image-edit",
                "enum": [
                  "qwen-image-edit"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "Remove all UI text elements from the image. Keep the feeling that the characters and scene are in water. Also, remove the green UI elements at the bottom",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "The negative prompt for the generation",
                "example": "blurry, ugly",
                "maxLength": 800
              },
              "image_url": {
                "type": "string",
                "title": "Image Url",
                "description": "URL of image to use for img2img",
                "example": "https://online.genbo.ai/img2video/412e68c5-1cad-4c0c-8a97-f14c40c412f2.jpg",
                "format": "uri"
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 2,
                "maximum": 50,
                "multipleOf": 1
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The same seed and the same prompt given to the same version of the model will output the same image every time.",
                "example": 32116006431307452,
                "minimum": 0,
                "maximum": 100000000000000000,
                "multipleOf": 1
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt when looking for a related image to show you. Default value: 3",
                "example": 1,
                "minimum": 0,
                "maximum": 20,
                "multipleOf": 0.1
              },
              "num_images": {
                "type": "integer",
                "title": "Num Images",
                "description": "The number of images to generate. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 4,
                "multipleOf": 1
              },
              "image_size": {
                "type": "string",
                "title": "Image Size",
                "description": "The size of the generated image.",
                "example": "custom",
                "enum": [
                  "custom",
                  "1:1 square 1024x1024",
                  "3:4 portrait 896x1152",
                  "9:16 portrait 768x1344",
                  "4:3 portrait 1152x896",
                  "16:9 landscape 1344x768"
                ]
              }
            },
            "required": [
              "model",
              "prompt",
              "image_url"
            ],
            "description": ""
          }
        ]
      },
      "video": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Wan2_1-T2V-14B"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "a robot is running through a futuristic cyberpunk city with neon signs and darkness with bright HDR lights",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "Negative prompt for video generation.",
                "example": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 81 to 121 (inclusive). Default value: 81",
                "example": 81,
                "minimum": 81,
                "maximum": 160
              },
              "frames_per_second": {
                "type": "integer",
                "title": "Frames per Second",
                "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and adjust_fps_for_interpolation is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If adjust_fps_for_interpolation is set to false, this value will be used as-is. Default value: 16",
                "example": 16,
                "minimum": 1,
                "maximum": 25
              },
              "aspect_ratio": {
                "type": "string",
                "title": "Aspect Ratio",
                "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image. Default value: 'auto'",
                "example": "1280x720",
                "enum": [
                  "1280x720",
                  "720x1280",
                  "720x720"
                ]
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Number of Inference Steps",
                "description": "Number of inference steps for sampling. Higher values give better quality but take longer. Default value: 5",
                "example": 5,
                "minimum": 1,
                "maximum": 40
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance Scale",
                "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality. Default value: 1",
                "example": 1,
                "minimum": 0,
                "maximum": 30,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt",
              "num_frames",
              "frames_per_second"
            ],
            "title": "Wan2_1-T2V-14B",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Wan2_1-I2V-14B-720P"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character.",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "Negative prompt for video generation.",
                "example": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 7658656531,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "shift": {
                "type": "number",
                "title": "Shift",
                "description": "Shift value for the video. Must be between 1.0 and 10.0. Default value: 2",
                "example": 2,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 1
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 81 to 121 (inclusive). Default value: 81",
                "example": 81,
                "minimum": 16,
                "maximum": 161
              },
              "image_url": {
                "type": "string",
                "format": "uri",
                "title": "Image URL",
                "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                "example": "https://img2.baidu.com/it/u=3430653577,2582301365&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=750",
                "pattern": "https?://.*\\.(jpeg|png|jpg)"
              },
              "frames_per_second": {
                "type": "integer",
                "title": "Frames per Second",
                "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and adjust_fps_for_interpolation is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If adjust_fps_for_interpolation is set to false, this value will be used as-is. Default value: 16",
                "example": 16,
                "minimum": 5,
                "maximum": 24
              },
              "aspect_ratio": {
                "type": "string",
                "title": "Aspect Ratio",
                "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image. Default value: auto",
                "example": "custom",
                "enum": [
                  "custom",
                  "16:9 landscape 1344x768",
                  "9:16 portrait 768x1344",
                  "1:1 square 1024x1024"
                ]
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Number of Inference Steps",
                "description": "Number of inference steps for sampling. Higher values give better quality but take longer. Default value: 5",
                "example": 5,
                "minimum": 1,
                "maximum": 40
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance Scale",
                "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality. Default value: 1",
                "example": 1,
                "minimum": 0,
                "maximum": 30,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "image_url",
              "prompt",
              "num_frames",
              "frames_per_second"
            ],
            "title": "Wan2_1-I2V-14B-720P",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "thinksound"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "A prompt to guide the audio generation. If not provided, it will be extracted from the video.",
                "example": "",
                "maxLength": 800
              },
              "cfg_scale": {
                "type": "number",
                "title": "CFG Scale",
                "description": "The classifier-free guidance scale for audio generation. Default value: 6",
                "example": 6,
                "minimum": 1,
                "maximum": 20,
                "multipleOf": 0.1
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "The seed for the random number generator",
                "example": 1,
                "minimum": 0,
                "maximum": 1000000000000000000
              },
              "video_url": {
                "type": "string",
                "title": "Video Url",
                "description": "The URL of the video to generate the audio for.",
                "format": "uri",
                "example": "https://online.genbo.ai/img2video/f2ba8d17-fb12-48d7-86d1-422cc88ad457.mp4",
                "pattern": "^(https?://).+\\.(mp4|avi|mov|mkv|gif)$"
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Number of Inference Steps",
                "description": "The number of inference steps for audio generation. Default value: 35",
                "example": 35,
                "minimum": 2,
                "maximum": 100
              }
            },
            "required": [
              "model",
              "video_url"
            ],
            "title": "thinksound",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Wan2_2-T2V-14B"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "a robot is running through a futuristic cyberpunk city with neon signs and darkness with bright HDR lights",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "Negative prompt for video generation.",
                "example": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                "maxLength": 800
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 81 to 121 (inclusive). Default value: 81",
                "example": 81,
                "minimum": 81,
                "maximum": 121,
                "multipleOf": 1
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000,
                "multipleOf": 1
              },
              "shift": {
                "type": "number",
                "title": "Shift",
                "description": "Shift value for the video. Must be between 1.0 and 10.0. Default value: 8",
                "example": 8,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 0.1
              },
              "frames_per_second": {
                "type": "integer",
                "title": "Frames per Second",
                "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and adjust_fps_for_interpolation is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If adjust_fps_for_interpolation is set to false, this value will be used as-is. Default value: 16",
                "example": 16,
                "minimum": 4,
                "maximum": 60,
                "multipleOf": 1
              },
              "aspect_ratio": {
                "type": "string",
                "title": "Aspect Ratio",
                "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image. Default value: 'auto'",
                "example": "1280x720",
                "enum": [
                  "1280x720",
                  "720x1280",
                  "720x720"
                ]
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Number of Inference Steps",
                "description": "Number of inference steps for sampling. Higher values give better quality but take longer. Default value: 8",
                "example": 8,
                "minimum": 2,
                "maximum": 40,
                "multipleOf": 1
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance Scale (1st Stage)",
                "description": "Classifier-free guidance scale. Higher values give better adherence to the prompt but may decrease quality. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 0.1
              },
              "guidance_scale_2": {
                "type": "number",
                "title": "Guidance Scale (2nd Stage)",
                "description": "Guidance scale for the second stage of the model. This is used to control the adherence to the prompt in the second stage of the model. Default value: 1",
                "example": 1,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 0.1
              }
            },
            "required": [
              "model",
              "prompt",
              "num_frames",
              "frames_per_second"
            ],
            "title": "Wan2_2-T2V-14B",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Wan2_2-I2V-14B-720P"
                ]
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "The white dragon warrior stands still, eyes full of determination and strength. The camera slowly moves closer or circles around the warrior, highlighting the powerful presence and heroic spirit of the character.",
                "maxLength": 800
              },
              "negative_prompt": {
                "type": "string",
                "title": "Negative Prompt",
                "description": "Negative prompt for video generation.",
                "example": "vivid color tone, overexposed, static, blurry details, subtitles, style, artwork, painting, frame, still, overall grayish, worst quality, low quality, JPEG compression artifacts, ugly, deformed, extra fingers, poorly drawn hands, poorly drawn face, distorted, disfigured, malformed limbs, fused fingers, motionless scene, messy background, three legs, crowded background, walking backward",
                "maxLength": 800
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 1,
                "minimum": 0,
                "maximum": 100000000000000000
              },
              "shift": {
                "type": "number",
                "title": "Shift",
                "description": "Shift value for the video. Must be between 1.0 and 10.0. Default value: 8",
                "example": 8,
                "minimum": 1,
                "maximum": 100,
                "multipleOf": 1
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 81 to 121 (inclusive). Default value: 81",
                "example": 81,
                "minimum": 81,
                "maximum": 121
              },
              "image_url": {
                "type": "string",
                "format": "uri",
                "title": "Image URL",
                "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                "example": "https://online.genbo.ai/img2video/79592042-97b8-44d3-9ce3-72120f3df192.png",
                "pattern": "https?://.*\\.(jpeg|png|jpg)"
              },
              "frames_per_second": {
                "type": "integer",
                "title": "Frames per Second",
                "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and adjust_fps_for_interpolation is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If adjust_fps_for_interpolation is set to false, this value will be used as-is. Default value: 16",
                "example": 16,
                "minimum": 4,
                "maximum": 60
              },
              "aspect_ratio": {
                "type": "string",
                "title": "Aspect Ratio",
                "description": "Aspect ratio of the generated video. If 'auto', the aspect ratio will be determined automatically based on the input image. Default value: auto",
                "example": "custom",
                "enum": [
                  "custom",
                  "16:9 landscape 1344x768",
                  "9:16 portrait 768x1344",
                  "1:1 square 1024x1024"
                ]
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Number of Inference Steps",
                "description": "Number of inference steps for sampling. Higher values give better quality but take longer. Default value: 6",
                "example": 6,
                "minimum": 2,
                "maximum": 50
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance Scale (1st Stage)",
                "description": "Classifier-free Guidance Scale (1st Stage). Higher values give better adherence to the prompt but may decrease quality. Default value: 1",
                "example": 1,
                "minimum": 0,
                "maximum": 30,
                "multipleOf": 0.1
              },
              "guidance_scale_2": {
                "type": "number",
                "title": "Guidance Scale (2nd Stage)",
                "description": "Classifier-free Guidance Scale (2nd Stage). Higher values give better adherence to the prompt but may decrease quality. Default value: 1",
                "example": 1,
                "minimum": 0,
                "maximum": 30,
                "multipleOf": 0.1
              }
            },
            "required": [
              "image_url",
              "prompt",
              "num_frames",
              "frames_per_second",
              "model"
            ],
            "title": "Wan2_2-I2V-14B-720P",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "infiniteTalk"
                ],
                "example": "infiniteTalk"
              },
              "image_url": {
                "type": "string",
                "title": "Image URL",
                "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                "example": "https://online.genbo.ai/img2video/35ca7329-6fb3-49ec-a7d2-f197511c56a9.png",
                "format": "uri"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "A woman with colorful hair talking on a podcast.",
                "maxLength": 800
              },
              "audio_url": {
                "type": "string",
                "title": "Audio Url",
                "description": "The URL of the audio file",
                "example": "https://online.genbo.ai/img2video/dbc5e6bd-25b6-484b-b7d6-76fda9b53ed1.mp3",
                "format": "uri"
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 41 to 721. Default value: 145",
                "example": 275,
                "minimum": 41,
                "maximum": 721,
                "multipleOf": 1
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 311200663032897,
                "minimum": 0,
                "maximum": 100000000000000000,
                "multipleOf": 1
              },
              "ratio": {
                "type": "string",
                "title": "Aspect ratio/resolution",
                "description": "Resolution of the video to generate. Must be either 480p or 720p. Default value: 480p",
                "example": "720x1280",
                "enum": [
                  "848x480",
                  "720x1280"
                ]
              }
            },
            "required": [
              "model",
              "image_url",
              "prompt",
              "audio_url",
              "num_frames"
            ],
            "title": "infiniteTalk",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Wan2_2-S2V-14B"
                ],
                "example": "Wan2_2-S2V-14B"
              },
              "image_url": {
                "type": "string",
                "title": "Image URL",
                "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                "example": "https://online.genbo.ai/genbo-test/afb51aab-9639-4a18-b753-becf493256e5.jpg",
                "format": "uri"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "The man is playing the guitar. He looks down at his hands playing the guitar and sings affectionately and gently",
                "maxLength": 800
              },
              "audio_url": {
                "type": "string",
                "title": "Audio Url",
                "description": "The URL of the audio file",
                "example": "https://online.genbo.ai/genbo-test/46b99b71-f7d7-49b6-8eb0-75ffbc5b4831.MP3",
                "format": "uri"
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 41 to 721. Default value: 145",
                "example": 77,
                "minimum": 40,
                "maximum": 120,
                "multipleOf": 1
              },
              "frames_per_second": {
                "type": "integer",
                "title": "Frames per Second",
                "description": "Frames per second of the generated video. Must be between 4 to 60. When using interpolation and adjust_fps_for_interpolation is set to true (default true,) the final FPS will be multiplied by the number of interpolated frames plus one. For example, if the generated frames per second is 16 and the number of interpolated frames is 1, the final frames per second will be 32. If adjust_fps_for_interpolation is set to false, this value will be used as-is. Default value: 16",
                "example": 16,
                "minimum": 4,
                "maximum": 60
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 311200663032897,
                "minimum": 0,
                "maximum": 100000000000000000,
                "multipleOf": 1
              },
              "ratio": {
                "type": "string",
                "title": "Aspect ratio/resolution",
                "description": "Resolution of the video to generate. Must be either 480p or 720p. Default value: 480p",
                "example": "720x1280",
                "enum": [
                  "848x480",
                  "720x1280"
                ]
              },
              "num_inference_steps": {
                "type": "integer",
                "title": "Num Inference Steps",
                "description": "The number of inference steps to perform. Default value: 20",
                "example": 20,
                "minimum": 2,
                "maximum": 40
              },
              "guidance_scale": {
                "type": "number",
                "title": "Guidance scale (CFG)",
                "description": "The CFG (Classifier Free Guidance) scale is a measure of how close you want the model to stick to your prompt.",
                "example": 1,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 0.1
              },
              "shift": {
                "type": "number",
                "title": "Shift",
                "description": "Shift value for the video. Must be between 1.0 and 10.0. Default value: 8",
                "example": 8,
                "minimum": 1,
                "maximum": 10,
                "multipleOf": 1
              }
            },
            "required": [
              "model",
              "image_url",
              "prompt",
              "audio_url",
              "num_frames"
            ],
            "title": "Wan2_2-S2V-14B",
            "description": ""
          },
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "InfiniteTalk Multi"
                ],
                "example": "InfiniteTalk Multi"
              },
              "image_url": {
                "type": "string",
                "title": "Image URL",
                "description": "URL of the input image. If the input image does not match the chosen aspect ratio, it is resized and center cropped.",
                "example": "https://online.genbo.ai/genbo-test/e5188e1d-a27e-4c41-9ae1-20012df42906.png",
                "format": "uri"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The text prompt to guide video generation.",
                "example": "Two characters are having a conversation. When one is speaking, the other keeps their mouth closed and doesn't move",
                "maxLength": 800
              },
              "audio_url1": {
                "type": "string",
                "title": "Audio Url",
                "description": "The URL of the audio file",
                "example": "https://online.genbo.ai/genbo-test/8feb86b2-8d1e-4478-9c38-6a53d51da529.mp3",
                "format": "uri"
              },
              "audio_url2": {
                "type": "string",
                "title": "Audio Url",
                "description": "The URL of the audio file",
                "example": "https://online.genbo.ai/genbo-test/dc0337cb-c77e-4306-8994-83d324f46137.mp3",
                "format": "uri"
              },
              "num_frames": {
                "type": "integer",
                "title": "Number of Frames",
                "description": "Number of frames to generate. Must be between 41 to 721. Default value: 145",
                "example": 275,
                "minimum": 41,
                "maximum": 721,
                "multipleOf": 1
              },
              "seed": {
                "type": "integer",
                "title": "Seed",
                "description": "Random seed for reproducibility. If None, a random seed is chosen.",
                "example": 506201535771240,
                "minimum": 0,
                "maximum": 100000000000000000,
                "multipleOf": 1
              },
              "ratio": {
                "type": "string",
                "title": "Aspect ratio/resolution",
                "description": "Resolution of the video to generate. Must be either 480p or 720p. Default value: 480p",
                "example": "720x1280",
                "enum": [
                  "848x480",
                  "720x1280"
                ]
              },
              "multi_audio_type": {
                "type": "string",
                "title":"Multi_audio_type",
                "description": "The multi_audio_type parameter manages how multiple audio clips are combinChoose 'para' to mix them in parallel-playing all at once, great for blendound sounds with vocals. Pick 'add' to string them sequentially, one aftererfect for segmented speech or ordered audio snippets. It's all about whetant overlap or a continuous flow",
                "example": "add",
                "enum": [
                  "add",
                  "para"
                ]
              }
            },
            "required": [
              "model",
              "image_url",
              "prompt",
              "audio_url",
              "num_frames"
            ],
            "title": "InfiniteTalk Multi",
            "description": ""
          }
        ]
      },
      "audio": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "enum": [
                  "Step Audio"
                ],
                "example": "Step Audio"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "description": "The prompt to generate the image with",
                "example": "对这个世界如果你有太多的抱怨,跌倒了就不敢继续往前走",
                "maxLength": 800
              },
              "audio_url": {
                "type": "string",
                "title": "Audio Url",
                "description": "URL of audio to use for audio2audio",
                "example": "https://online.genbo.ai/genbo-test/5ada6cf3-9cd6-40bc-ac62-d5ec45dae2ce.mp3",
                "format": "uri"
              },
              "emotion": {
                "type": "string",
                "title": "emotion",
                "description": "The emotion to use for generating the audio. Default value: None",
                "example": "None",
                "enum": [
                  "None",
                  "高兴1",
                  "生气1",
                  "撒娇1",
                  "悲伤1"
                ]
              },
              "language": {
                "type": "string",
                "title": "language",
                "description": "The language to use for generating the audio. Default value: None",
                "example": "None",
                "enum": [
                  "None",
                  "中文",
                  "英文",
                  "日语",
                  "韩语",
                  "四川话",
                  "粤语"
                ]
              },
              "express": {
                "type": "string",
                "title": "express",
                "description": "The express to use for generating the audio. Default value: None",
                "example": "None",
                "enum": [
                  "None",
                  "RAP",
                  "哼唱"
                ]
              },
              "temperature": {
                "type": "number",
                "title": "temperature",
                "description": "The randomness and creativity in generating speech within the control model",
                "example": 0.5,
                "minimum": 0,
                "maximum": 1,
                "multipleOf": 0.1
              },
              "max_length": {
                "type": "integer",
                "title": "max length",
                "description": "max_length can be adjusted according to the text length.",
                "example": 2048,
                "minimum": 0,
                "maximum": 2048
              },
              "tags": {
                "type": "string",
                "title": "custom mark",
                "description": "Add experimental custom_mark, surrounding with '()', for example (温柔)(东北话), it may have an effect.",
                "example": "",
                "maxLength": 100
              },
              "unload_model": {
                "type": "boolean",
                "title": "Unload model",
                "description": "Optional unload_model to choose whether to unload the model to accelerate inference speed.",
                "example": false
              }
            },
            "required": [
              "model",
              "prompt",
              "audio_url"
            ],
            "title": "Step Audio",
            "description": ""
          }
        ]
      }
    },
    "securitySchemes": {
      "Authorization": {
        "scheme": "bearer",
        "type": "http",
        "description": "Use the following format for authentication: Bearer [<your api key>](https://genbo.ai/apiTokens)"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.genbo.ai",
      "description": "Prod Env"
    }
  ],
  "security": [
    {
      "Authorization": []
    }
  ]
}